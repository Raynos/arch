var rest = require("../src/rest.js"),
	pd = require("pd").extendNatives(true),
	tester = require("tester"),
	assert = require("assert");

module.exports = {
	"test rest": function () {
		assert(rest.Rest);
		assert(rest.Resource)		
	},
	"test Resource": function () {
		var R = rest.Resource,
			get = function () {},
			post = function () {};

		var r = R.new({
			"GET": get,
			"POST": post
		});

		assert(R.isPrototypeOf(r));
		assert(r.handler)
		assert(r.methods["GET"] === get);
		assert(r.methods["POST"] === post)
	},
	"test Rest.resource": function () {
		var t = rest.Rest.new();

		var uri = /foo/;
		var methods = {
			"GET": function () { }
		};

		t.resource(uri, methods);

		assert(t._resources[0][0] === uri);
		assert(rest.Resource.isPrototypeOf(t._resources[0][1]));
		assert(t._resources[0][1].methods === methods);
	},
	"test Rest.router": function () {
		var t = rest.Rest.new();

		var called = false;
		t.resource(/foo/, {
			"GET": function () {
				called = true;
			}
		})

		var router = t.router();
		router.call({}, {
			url: "foo",
			method: "GET"
		});
		assert(called);
		called = false;
		router.call({
			next: function () {
				called = true;
			}
		}, {});
		assert(called);
	}
};

if (!module.parent) {
	tester(module.exports);	
}